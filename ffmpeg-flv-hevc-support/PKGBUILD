# Maintainer: shmilee
# Maintainer: Maxime Gauduin <alucryd@archlinux.org>
# Contributor: Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Ionut Biru <ibiru@archlinux.org>
# Contributor: Tom Newsom <Jeepster@gmx.co.uk>
# Contributor: Paul Mattal <paul@archlinux.org>

pkgname=ffmpeg5.1
pkgver=5.1.6
pkgrel=1
pkgdesc='Complete solution to record, convert and stream audio and video, add hevc/vp8/vp9/opus support'
arch=(x86_64)
url=https://ffmpeg.org/
license=(GPL3)
depends=(
  alsa-lib
  aom
  bzip2
  fontconfig
  fribidi
  gmp
  gnutls
  gsm
  jack
  lame
  libass.so
  libavc1394
  libbluray.so
  libbs2b.so
  libdav1d.so
  libdrm
  libfreetype.so
  libgl
  libiec61883
  libmfx
  libmodplug
  libpulse
  librav1e.so
  libraw1394
  librsvg-2.so
  libsoxr
  libssh
  libtheora
  libva.so
  libva-drm.so
  libva-x11.so
  libvdpau
  libvidstab.so
  libvorbisenc.so
  libvorbis.so
  libvpx.so
  libvulkan.so
  libwebp
  libx11
  libx264.so
  libx265.so
  libxcb
  libxext
  libxml2
  libxv
  libxvidcore.so
  libzimg.so
  ocl-icd
  opencore-amr
  openjpeg2
  opus
  sdl2
  speex
  srt
  svt-av1
  v4l-utils
  vmaf
  xz
  zlib
)
makedepends=(
  amf-headers
  avisynthplus
  clang
  ffnvcodec-headers
#  git
  ladspa
  mesa
  nasm
  opencl-headers
  vulkan-headers
)
optdepends=(
  'avisynthplus: AviSynthPlus support'
  'intel-media-sdk: Intel QuickSync support'
  'ladspa: LADSPA filters'
  'nvidia-utils: Nvidia NVDEC/NVENC support'
)
# rm cmd find-libprovides pkg.tar.xz
provides=(
  libavcodec.so=59-64
  libavdevice.so=59-64
  libavfilter.so=8-64
  libavformat.so=59-64
  libavutil.so=57-64
  libpostproc.so=56-64
# conflict with 6.x, see https://www.ffmpeg.org/download.html
#  libswresample.so=4-64
  libswscale.so=6-64
)
options=()
#_tag=3949db4d261748a9f34358a388ee255ad1a7f0c0
source=(
  #git+https://git.ffmpeg.org/ffmpeg.git?signed#tag=${_tag}
  https://www.ffmpeg.org/releases/ffmpeg-${pkgver}.tar.gz
  010-add-av_stream_get_first_dts-for-chromium.patch
  050-add-flv_hevc-support.patch
)
b2sums=('a0ef0af75179963574d074694662ec1efc4e13043da3d9a5f3ffbb6b4e0491e1cfc9ddebec8bbeda1c69420b514249485c1df4333f0d5dba35291fdf0e059829'
        '555274228e09a233d92beb365d413ff5c718a782008075552cafb2130a3783cf976b51dfe4513c15777fb6e8397a34122d475080f2c4483e8feea5c0d878e6de'
        '2006884610226b8239b7cb837df9c46aa61bf2400f54ac5caae4b11665b663dce78defbc5f24f3c3074c857c327f991fc250d01fc91f049f64914d847b36c744')
#validpgpkeys=(DD1EC9E8DE085C629B3E1846B18E8928B3948D64) # Michael Niedermayer <michael@niedermayer.cc>

prepare() {
  cd ffmpeg-${pkgver}
  # 010-add-av_stream_get_first_dts-for-chromium.patch # https://crbug.com/1251779
  for p in ../0*-*.patch; do
   msg2 "patch: $p"
    patch -Np1 -i "$p"
  done
}

#pkgver() {
#  cd ffmpeg
#  git describe --tags | sed 's/^n//'
#}

build() {
  cd ffmpeg-${pkgver}

  # 1. static failed: miss other static .a
  #  --disable-shared --enable-static \
  #  --extra-libs=-static --extra-cflags=--static \
  # 2. share: ldexeflags for link exe; ldsoflags for link so
  #  --disable-static --enable-shared \
  #  --extra-ldexeflags=-Wl,-rpath,/usr/lib/ffmpeg5.1 \
  #  --extra-ldsoflags=-Wl,-rpath,/usr/lib/ffmpeg5.1 \
  ./configure \
    --prefix=/usr \
    --incdir=/usr/include/ffmpeg5.1 \
    --libdir=/usr/lib/ffmpeg5.1 \
    --disable-static --enable-shared \
    --extra-ldexeflags=-Wl,-rpath,/usr/lib/ffmpeg5.1 \
    --extra-ldsoflags=-Wl,-rpath,/usr/lib/ffmpeg5.1 \
    --disable-debug \
    --disable-doc \
    --disable-stripping \
    --enable-amf \
    --enable-avisynth \
    --enable-cuda-llvm \
    --enable-lto \
    --enable-fontconfig \
    --enable-gmp \
    --enable-gnutls \
    --enable-gpl \
    --enable-ladspa \
    --enable-libaom \
    --enable-libass \
    --enable-libbluray \
    --enable-libbs2b \
    --enable-libdav1d \
    --enable-libdrm \
    --enable-libfreetype \
    --enable-libfribidi \
    --enable-libgsm \
    --enable-libiec61883 \
    --enable-libjack \
    --enable-libmfx \
    --enable-libmodplug \
    --enable-libmp3lame \
    --enable-libopencore_amrnb \
    --enable-libopencore_amrwb \
    --enable-libopenjpeg \
    --enable-libopus \
    --enable-libpulse \
    --enable-librav1e \
    --enable-librsvg \
    --enable-libsoxr \
    --enable-libspeex \
    --enable-libsrt \
    --enable-libssh \
    --enable-libsvtav1 \
    --enable-libtheora \
    --enable-libv4l2 \
    --enable-libvidstab \
    --enable-libvmaf \
    --enable-libvorbis \
    --enable-libvpx \
    --enable-libwebp \
    --enable-libx264 \
    --enable-libx265 \
    --enable-libxcb \
    --enable-libxml2 \
    --enable-libxvid \
    --enable-libzimg \
    --enable-nvdec \
    --enable-opencl \
    --enable-opengl \
    --enable-version3 \
    --enable-vulkan
#  --enable-nvenc \  # need nvidia-sdk; ERROR: nvenc requested but not found

  make
  #make tools/qt-faststart
  #make doc/ff{mpeg,play}.1
}

package() {
  make DESTDIR="${pkgdir}" -C ffmpeg-${pkgver} install #install-man
  #install -Dm 755 ffmpeg-${pkgver}/tools/qt-faststart "${pkgdir}"/usr/bin/

  cd "${pkgdir}"
  local f

  # rename bin xx5.1
  for f in ffmpeg ffplay ffprobe; do
    mv -v usr/bin/"$f" usr/bin/"$f"5.1
  done

  ## after -rpath, this part not needed
  ## move libs to /usr/lib, create links except libswresample.so.4
  #for f in usr/lib/ffmpeg5.1/*; do
  #  if [[ -L $f ]]; then
  #    # update target
  #    ln -svrf -- usr/lib/"$(readlink "$f")" "$f"
  #    if [[ $f != *.so ]]; then
  #      # create new links
  #      ln -svf -- "$(basename "$(readlink "$f")")" usr/lib/"$(basename "$f")"
  #    fi
  #  else
  #    # move so files and dir pkgconfig/ to libs
  #    mv -v "$f" usr/lib
  #  fi
  #done
  #rm -vf "usr/lib/libswresample.so.4" # rm conflict .so
  ## pkgconfig conflict; note: lib/ffmpeg5.1/pkgconfig -> lib/pkgconfig
  #for f in usr/lib/pkgconfig/*.pc; do
  #  mv -v "$f" "${f%.pc}"-5.1.pc
  #done

  # remove others
  rm -r usr/share
}

# vim: ts=2 sw=2 et:
